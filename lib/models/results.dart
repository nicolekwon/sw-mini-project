///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///

class WelcomeFoodsFoodNutrients {
/*
{
  "nutrientId": 1003,
  "nutrientName": "Protein",
  "nutrientNumber": "203",
  "unitName": "G",
  "derivationCode": "LCCS",
  "derivationDescription": "Calculated from value per serving size measure",
  "value": 0
} 
*/

  int? nutrientId;
  String? nutrientName;
  String? nutrientNumber;
  String? unitName;
  String? derivationCode;
  String? derivationDescription;
  int? value;

  WelcomeFoodsFoodNutrients({
    this.nutrientId,
    this.nutrientName,
    this.nutrientNumber,
    this.unitName,
    this.derivationCode,
    this.derivationDescription,
    this.value,
  });
  WelcomeFoodsFoodNutrients.fromJson(Map<String, dynamic> json) {
    nutrientId = json["nutrientId"]?.toInt();
    nutrientName = json["nutrientName"]?.toString();
    nutrientNumber = json["nutrientNumber"]?.toString();
    unitName = json["unitName"]?.toString();
    derivationCode = json["derivationCode"]?.toString();
    derivationDescription = json["derivationDescription"]?.toString();
    value = json["value"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["nutrientId"] = nutrientId;
    data["nutrientName"] = nutrientName;
    data["nutrientNumber"] = nutrientNumber;
    data["unitName"] = unitName;
    data["derivationCode"] = derivationCode;
    data["derivationDescription"] = derivationDescription;
    data["value"] = value;
    return data;
  }
}

class WelcomeFoods {
/*
{
  "fdcId": 1648210,
  "description": "APPLE",
  "lowercaseDescription": "apple",
  "dataType": "Branded",
  "gtinUpc": "070038322238",
  "publishedDate": "2021-03-19",
  "brandOwner": "Associated Wholesale Grocers, Inc.",
  "brandName": "BEST CHOICE",
  "ingredients": "FILTERED WATER, APPLE JUICE CONCENTRATE, ASCORBIC ACID (VITAMIN C).",
  "marketCountry": "United States",
  "foodCategory": "Fruit & Vegetable Juice, Nectars & Fruit Drinks",
  "allHighlightFields": "<b>Ingredients</b>: FILTERED WATER, <em>APPLE</em> JUICE CONCENTRATE, ASCORBIC ACID (VITAMIN C).",
  "score": 904.62524,
  "foodNutrients": [
    {
      "nutrientId": 1003,
      "nutrientName": "Protein",
      "nutrientNumber": "203",
      "unitName": "G",
      "derivationCode": "LCCS",
      "derivationDescription": "Calculated from value per serving size measure",
      "value": 0
    }
  ]
} 
*/

  int? fdcId;
  String? description;
  String? lowercaseDescription;
  String? dataType;
  String? gtinUpc;
  String? publishedDate;
  String? brandOwner;
  String? brandName;
  String? ingredients;
  String? marketCountry;
  String? foodCategory;
  String? allHighlightFields;
  double? score;
  List<WelcomeFoodsFoodNutrients?>? foodNutrients;

  WelcomeFoods({
    this.fdcId,
    this.description,
    this.lowercaseDescription,
    this.dataType,
    this.gtinUpc,
    this.publishedDate,
    this.brandOwner,
    this.brandName,
    this.ingredients,
    this.marketCountry,
    this.foodCategory,
    this.allHighlightFields,
    this.score,
    this.foodNutrients,
  });
  WelcomeFoods.fromJson(Map<String, dynamic> json) {
    fdcId = json["fdcId"]?.toInt();
    description = json["description"]?.toString();
    lowercaseDescription = json["lowercaseDescription"]?.toString();
    dataType = json["dataType"]?.toString();
    gtinUpc = json["gtinUpc"]?.toString();
    publishedDate = json["publishedDate"]?.toString();
    brandOwner = json["brandOwner"]?.toString();
    brandName = json["brandName"]?.toString();
    ingredients = json["ingredients"]?.toString();
    marketCountry = json["marketCountry"]?.toString();
    foodCategory = json["foodCategory"]?.toString();
    allHighlightFields = json["allHighlightFields"]?.toString();
    score = json["score"]?.toDouble();
    if (json["foodNutrients"] != null) {
      final v = json["foodNutrients"];
      final arr0 = <WelcomeFoodsFoodNutrients>[];
      v.forEach((v) {
        arr0.add(WelcomeFoodsFoodNutrients.fromJson(v));
      });
      foodNutrients = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["fdcId"] = fdcId;
    data["description"] = description;
    data["lowercaseDescription"] = lowercaseDescription;
    data["dataType"] = dataType;
    data["gtinUpc"] = gtinUpc;
    data["publishedDate"] = publishedDate;
    data["brandOwner"] = brandOwner;
    data["brandName"] = brandName;
    data["ingredients"] = ingredients;
    data["marketCountry"] = marketCountry;
    data["foodCategory"] = foodCategory;
    data["allHighlightFields"] = allHighlightFields;
    data["score"] = score;
    if (foodNutrients != null) {
      final v = foodNutrients;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["foodNutrients"] = arr0;
    }
    return data;
  }
}

class WelcomeFoodSearchCriteria {
/*
{
  "query": "apple",
  "generalSearchInput": "apple",
  "pageNumber": 1,
  "numberOfResultsPerPage": 50,
  "pageSize": 1,
  "requireAllWords": false
} 
*/

  String? query;
  String? generalSearchInput;
  int? pageNumber;
  int? numberOfResultsPerPage;
  int? pageSize;
  bool? requireAllWords;

  WelcomeFoodSearchCriteria({
    this.query,
    this.generalSearchInput,
    this.pageNumber,
    this.numberOfResultsPerPage,
    this.pageSize,
    this.requireAllWords,
  });
  WelcomeFoodSearchCriteria.fromJson(Map<String, dynamic> json) {
    query = json["query"]?.toString();
    generalSearchInput = json["generalSearchInput"]?.toString();
    pageNumber = json["pageNumber"]?.toInt();
    numberOfResultsPerPage = json["numberOfResultsPerPage"]?.toInt();
    pageSize = json["pageSize"]?.toInt();
    requireAllWords = json["requireAllWords"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["query"] = query;
    data["generalSearchInput"] = generalSearchInput;
    data["pageNumber"] = pageNumber;
    data["numberOfResultsPerPage"] = numberOfResultsPerPage;
    data["pageSize"] = pageSize;
    data["requireAllWords"] = requireAllWords;
    return data;
  }
}

class Welcome {
/*
{
  "totalHits": 21874,
  "currentPage": 1,
  "totalPages": 21874,
  "pageList": [
    1
  ],
  "foodSearchCriteria": {
    "query": "apple",
    "generalSearchInput": "apple",
    "pageNumber": 1,
    "numberOfResultsPerPage": 50,
    "pageSize": 1,
    "requireAllWords": false
  },
  "foods": [
    {
      "fdcId": 1648210,
      "description": "APPLE",
      "lowercaseDescription": "apple",
      "dataType": "Branded",
      "gtinUpc": "070038322238",
      "publishedDate": "2021-03-19",
      "brandOwner": "Associated Wholesale Grocers, Inc.",
      "brandName": "BEST CHOICE",
      "ingredients": "FILTERED WATER, APPLE JUICE CONCENTRATE, ASCORBIC ACID (VITAMIN C).",
      "marketCountry": "United States",
      "foodCategory": "Fruit & Vegetable Juice, Nectars & Fruit Drinks",
      "allHighlightFields": "<b>Ingredients</b>: FILTERED WATER, <em>APPLE</em> JUICE CONCENTRATE, ASCORBIC ACID (VITAMIN C).",
      "score": 904.62524,
      "foodNutrients": [
        {
          "nutrientId": 1003,
          "nutrientName": "Protein",
          "nutrientNumber": "203",
          "unitName": "G",
          "derivationCode": "LCCS",
          "derivationDescription": "Calculated from value per serving size measure",
          "value": 0
        }
      ]
    }
  ],
  "aggregations": {
    "dataType": {
      "Branded": 21699,
      "SR Legacy": 89,
      "Survey (FNDDS)": 81,
      "Foundation": 5
    },
    "nutrients": {}
  }
} 
*/

  int? totalHits;
  int? currentPage;
  int? totalPages;
  List<int?>? pageList;
  WelcomeFoodSearchCriteria? foodSearchCriteria;
  List<WelcomeFoods?>? foods;

  Welcome({
    this.totalHits,
    this.currentPage,
    this.totalPages,
    this.pageList,
    this.foodSearchCriteria,
    this.foods,
  });
  Welcome.fromJson(Map<String, dynamic> json) {
    totalHits = json["totalHits"]?.toInt();
    currentPage = json["currentPage"]?.toInt();
    totalPages = json["totalPages"]?.toInt();
    if (json["pageList"] != null) {
      final v = json["pageList"];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      pageList = arr0;
    }
    foodSearchCriteria = (json["foodSearchCriteria"] != null) ? WelcomeFoodSearchCriteria.fromJson(json["foodSearchCriteria"]) : null;
    if (json["foods"] != null) {
      final v = json["foods"];
      final arr0 = <WelcomeFoods>[];
      v.forEach((v) {
        arr0.add(WelcomeFoods.fromJson(v));
      });
      foods = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["totalHits"] = totalHits;
    data["currentPage"] = currentPage;
    data["totalPages"] = totalPages;
    if (pageList != null) {
      final v = pageList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data["pageList"] = arr0;
    }
    if (foodSearchCriteria != null) {
      data["foodSearchCriteria"] = foodSearchCriteria!.toJson();
    }
    if (foods != null) {
      final v = foods;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["foods"] = arr0;
    }
    return data;
  }
}
